こっちのほうは更新ログを書いていくよ
記入した日も書くのを忘れないようにね
(2018/04/20)
	fgetsによる文字入力時にEnterの2重判定が起こるバグを確認、キーボードを変えても起こるためソースの書き方orAPI側のバグと予想して原因を調査予定
(2018/04/24)
	背伸びして無事爆発したので単一ファイル処理にします
(2018/04/25)
	懲りずにヘッダーファイルを製作、インクルードとかプロトタイプ宣言とかを向こうにぶん投げてすっきり
	特に変な動きはしてないしこれでオッケーかな
	Enter2重判定バグの原因特定完了、どうやらfgets等で取得したEnterが次の入力まで持ち越されていたことが原因だった模様
	爆発した時の原因だった構造体の挙動を再確認、このプロジェクトではやらないよ？
	システム面のバグ取りもほぼ終了、ここからAIの制作に入る
(2018/04/26)
	AIの大まかな仕様が決定、序盤に焦点を絞ったAI4種類を検討中
(2018/04/27)
	思いっきり忘れていたファイル絡みのシステムを追加
	山は越えたし多分どうにでもなる
	学論の内容がこれをそのまま使うようになるかも、修論も考えるとペアプレーは修論のネタにしたい
	AIの基本的な構成は決定、それぞれ4種類の異なるアプローチをこれから考えていきたい(GW前日)
(2018/05/08)
	GW期間中に先行研究を発見、ルール等は異なるが端のカードは当たっても不利になりにくいということが確認できた
	この研究では外した時の公開カードを任意で選択している(4人プレーとペアプレーの折衷ルール)ため、ブラフの有効性を調べるアプローチで挑むのがよさそう
(2018/05/09)
	Githubを用いての開発環境を作ることにしました
	…いきなり突っ込んで大丈夫だろうか
	早速ガバ、ブランチとして作ったMultiFileがいきなり行方不明
	もしかして：マージされた
	とはいえちゃんと動いているからまあいいかな
	原因判明、どうもVSの方のGitとGitHubで対応しているフォルダが別のものであることが原因らしい
(2018/05/10)
	ランダムAIがおよそ完成、これを元にベースAIを作っていく
(2018/05/16)
　	ベースAIが大体完成、自分の手札のどれが裏返ってるかを見る機能がないことに(今更)気づく
(2018/05/17)
	自分の手札の裏返り状況を確認する機能を追加、1月近く放置されていた事案だった
(2018/05/18)
	ベースAI完成、実験用のAIの内容を考えないと…
	AI実装内容(予定):
	4種類で検討中、序盤の攻防に重点を置いてAIを組む
	1.端のカードから、ブラフを行う
	2.端のカードから、ブラフを行わない
	3.中央のカードから、ブラフを行う
	4.中央のカードから、ブラフを行わない
	現時点ではこの4種類、ブラフの有効な局面の判定については要検討
(2018/05/23)
	最終結果をテキストファイルに書き出せるように追記
	成功率はExcel先生に任せましょう
(2018/05/29)
	AIの検証の為に詰めアルゴ機能を実装したいと思う
	中間発表に向けてAIの具体例を考えていかないといけないとのこと
(2018/05/30)
	ゲームの経過ログを別フォルダに書き込むように修正
	元のままだとゲームログが多くなりすぎて面倒だった
(2018/06/05)
	プログラミング面で目下の課題は
	1.端からのAIと中央からのAIの作成
	2.AIのアタック成功率の向上
	計画書では変わらず具体例の思考を行う
(2018/07/17)
	端からAIを改めて製作開始
	バックアップの重要さが身にしみてわかりました
